datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model file_content {
  id           BigInt         @id @default(autoincrement()) @map("_id")
  file_info_id BigInt
  file_url     String         @db.VarChar(200)
  file_name    String         @db.VarChar(45)
  file_info    file_info      @relation(fields: [file_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_show_content")
  file_edition file_edition[]

  @@index([file_info_id], map: "fk_idx_f_id")
}

model file_edition {
  id           BigInt       @id @default(autoincrement()) @map("_id")
  file_info_id BigInt
  file_id      BigInt
  next_id      BigInt?      @default(0)
  file_content file_content @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_control_edition")

  @@index([file_id], map: "fk_idx_content_id")
  @@index([file_info_id], map: "idx_file_info_id")
}

model file_info {
  id                 BigInt         @id @default(autoincrement()) @map("_id")
  product_id         BigInt
  file_name          String         @db.VarChar(45)
  latest_change_time DateTime       @db.Timestamp(0)
  product_info       product_info   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_show_file")
  file_content       file_content[]

  @@index([product_id], map: "fk_idx_p_id")
}

model product_info {
  id                 BigInt               @id @default(autoincrement()) @map("_id")
  product_name       String               @db.VarChar(45)
  creator_id         String               @db.VarChar(20)
  creator_email      String               @db.VarChar(45)
  creator_pic_url    String?              @db.VarChar(200)
  file_info          file_info[]
  participation_info participation_info[]
  star_of_product    star_of_product[]
  watch_of_product   watch_of_product[]

  @@index([product_name], map: "full_idx_name")
}

model star_of_product {
  id           BigInt       @default(autoincrement()) @map("_id")
  u_id         BigInt
  p_id         BigInt
  stared_time  DateTime     @db.Timestamp(0)
  product_info product_info @relation(fields: [p_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_be_stared")
  user_info    user_info    @relation(fields: [u_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_star")

  @@id([id, u_id, p_id])
  @@index([p_id], map: "fk_idx_p_s")
  @@index([u_id], map: "fk_idx_u_s")
}

model user_info {
  id                 BigInt               @id @default(autoincrement()) @map("_id")
  user_log_id        String               @unique(map: "user_id_UNIQUE") @db.VarChar(20)
  password           String               @db.VarChar(45)
  email              String               @db.VarChar(45)
  create_time        DateTime             @db.Timestamp(0)
  latest_logon       DateTime?            @db.Timestamp(0)
  profile_pic_url    String?              @db.VarChar(200)
  participation_info participation_info[]
  star_of_product    star_of_product[]
  watch_of_product   watch_of_product[]

  @@index([email], map: "idx_email")
  @@index([email, password], map: "idx_email_and_pass")
  @@index([user_log_id, password], map: "idx_id_and_pass")
  @@index([user_log_id], map: "idx_u_id")
}

model watch_of_product {
  id                  BigInt       @default(autoincrement()) @map("_id")
  u_id                BigInt
  p_id                BigInt
  latest_watched_time DateTime     @db.Timestamp(0)
  product_info        product_info @relation(fields: [p_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_be_watched")
  user_info           user_info    @relation(fields: [u_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_watch")

  @@id([id, u_id, p_id])
  @@index([p_id], map: "fk_p_w")
  @@index([u_id], map: "fk_u_w")
}

model participation_info {
  id           BigInt       @map("_id")
  u_id         BigInt
  p_id         BigInt
  product_info product_info @relation(fields: [p_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_be_particepated")
  user_info    user_info    @relation(fields: [u_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_to_particepate")

  @@id([id, u_id, p_id])
  @@index([p_id], map: "fk_idx_p_pa")
  @@index([u_id], map: "fk_idx_u_pa")
}
